docker-compose.yml file:
version: '4.0'

services:
  frontend-service:
    image: frontend # local image built using exercises from part 1
    container_name: frontend-container
    depends_on:
        - backend-service
  backend-service:
    image: backend # local image built using exercises from part 1
    container_name: backend-container
    environment:
      - REDIS_HOST=redis-service
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=example
    depends_on:
      - db
  redis-service:
    image: redis
    container_name: cache
  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=example
    volumes:
      - type: bind
        source: ./pgdb
        target: /var/lib/postgresql/data
    container_name: postgres_database
  nginx:
      image: nginx:alpine
      volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf:ro
      ports:
          - 80:80
      depends_on:
          - backend-service
          - frontend-service
      container_name: nginx

nginx.conf file:
events { worker_connections 1024; }

http {
  server {
    listen 80;

    location / {
      proxy_pass http://frontend-service:5000;
    }

    # configure here where requests to http://localhost/api/...
    # are forwarded
    location /api/ {
      proxy_set_header Host $host;
      proxy_pass http://backend-service:8080/;
    }
  }
}
